---
import Layout from '@layouts/Layout.astro';
import { Button } from '@components/starwind/button';
import { Picture } from 'astro:assets';

import { type CollectionEntry, getCollection } from 'astro:content';
import { render } from 'astro:content';

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getCollection('projects');
  // Filter out drafts
  return posts
    .filter((post) => post.data.draft !== true)
    .map((post) => ({
      params: { slug: post.id },
      props: post,
    }));
}

type Props = CollectionEntry<'projects'>;
const post = Astro.props;
const { Content } = await render(post);

// Format the last updated date
const lastUpdated = post.data.updatedDate
  ? new Date(post.data.updatedDate).toLocaleDateString('en-ID', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : 'Unknown date';
---

<Layout
  title={post.data.sortTitle}
  desc={post.data.desc}
  url={new URL(Astro.url.pathname, Astro.site)}
  ogType='article'
  ogImage={new URL(`${post.data.ogImage}`, Astro.site)}
>
  <main>
    <div class='container mx-auto py-24'>
      <div class='mb-8'>
        <Button size='sm' variant='outline' href='/project'>
          Back</Button
        >
      </div>
      <article
        class='mx-auto prose prose-zinc prose-headings:mb-2 prose-headings:font-medium prose-p:my-1 prose-p:font-light prose-p:text-lg prose-img:rounded-lg prose-ol:my-4 prose-ul:my-4 prose-li:text-lg prose-li:font-light prose-hr:my-8 prose-figcaption:text-base'
      >
        <h1>{post.data.title}</h1>
        <p>{post.data.desc}</p>
        <Picture
          src={post.data.image}
          alt={post.data.sortTitle}
          class='rounded-lg'
          loading='eager'
          formats={['avif', 'webp']}
        />
        <div
          class='lg:pb-4 flex flex-col lg:flex-row-reverse lg:justify-between lg:items-center gap-4'
        >
          <Button
            size='sm'
            href={post.data.siteLink}
            class='text-center no-underline rounded-full'
            target='_blank'
            style='text-decoration: none;'>Visit Website</Button
          >
          {
            post.data.tags && (
              <div class='mb-4 lg:mb-0 flex gap-2 flex-wrap'>
                {(Array.isArray(post.data.tags)
                  ? post.data.tags
                  : [post.data.tags]
                ).map((tag) => (
                  <span class='text-sm py-[8px] px-4 bg-neutral-200 text-black rounded-full'>
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
        <Content />
        <p class='text-sm'>Last updated on {lastUpdated}</p>
      </article>
    </div>
  </main>
</Layout>
